微信斗地主服务器相关

测试服域名testsgame.kkvs.com
正式服域名sgame.kkvs.com  ---变更为预发布测试服

方块新正式服
域名sjddz-tbj.phonecoolgame.com/10200
端口443

this.Client_onLoginSuccessfully = function (args) {
    var accountName = args.readString();
    gameEngine.app.username = accountName;
    gameEngine.app.baseappIp = args.readString();
    gameEngine.app.baseappPort = args.readUint16();
    if (WSSTR == "wss://") {
        //gameEngine.app.baseappIp = gameEngine.app.ip;
        gameEngine.app.baseappPort = gameEngine.app.baseappPort - 100;
        gameEngine.app.baseappIp = "sjddz-tbj.phonecoolgame.com/"+ gameEngine.app.baseappPort + "/"
    }
    gameEngine.app.serverdatas = args.readBlob();

    cc.log("gameEngineApp::Client_onLoginSuccessfully: accountName(" + accountName + "), addr(" +
        gameEngine.app.baseappIp + ":" + gameEngine.app.baseappPort + "), datas(" + gameEngine.app.serverdatas.length + ")!");

    gameEngine.app.disconnect();
    gameEngine.app.login_baseapp(true);
}

----------------------------------------------------
玩家登录成功 

发送 onPlayerData

head_frame: 标示 玩家佩戴的当前头像框

更新
发送玩家自己的排位积分信息 GamePlayer function
onPlayerData: function (params) 
{
        cc.log("GamePlayer->>>>onPlayerData 玩家排位积分: " + params.score_master);
        cc.log("GamePlayer->>>>onPlayerData 玩家当前选中的头像框: " + params.head_frame);
},

更新（玩家自己的排位积分变动时） GamePlayer function
on_score_master_update:function(score_master) {
 cc.log("GamePlayer->>>>on_score_master_update 玩家排位积分发送改变 当前最新积分: " + score_master);
}
//已废弃
//PLAYER_MSG_ID_REQ_PLAYER_COMPETITIVE_RANKING                        = 16  # 玩家排位信息
//on_player_msg(GlobalConst.PLAYER_MSG_ID_REQ_PLAYER_COMPETITIVE_RANKING, {'score': 100})


发送玩家自己的道具 （玩家道具变动时 也会主动下发）

on_item
	[ 
		{"prop_id": 1050, "prop_count": 100}, 
		{"prop_id": 1004, "prop_count": 5000}
	]

注 道具ID	道具类型		道具描述
	
	1000	小红包抽奖次数  消耗次数可抽奖
	1001	中红包抽奖次数  消耗次数可抽奖
	1002	大红包抽奖次数	消耗次数可抽奖
	1004	红包余额			可提现
	1050  	钻石|房卡		开房，兑换游戏币

	PROP_ID_HEAD_FRAME_1 = 2000  # 头像框1
	PROP_ID_HEAD_FRAME_2 = 2001  # 头像框2
	PROP_ID_HEAD_FRAME_3 = 2003  # 头像框3
	PROP_ID_HEAD_FRAME_MAX = 2004  # 头像框MAX


发送当前赛季信息
PLAYER_MSG_ID_REQ_COMPETITIVE_RANKING                               = 15  # 排位赛季信息

on_player_msg(
				PLAYER_MSG_ID_REQ_COMPETITIVE_RANKING, 
				{'id': 0, 'start': 0, 'end': 0, 'status': 1} //id
				[{"end": "1533052799", "status": "1", "start": "1530374400", "id": "1"}]
			)

注: # id: 季赛ID
    # start: 季赛开始时间戳
    # end: 季赛结束时间戳
    # status: 季赛当前状态  0 未开始, 1 进行中, 2 已结束




----------------------------------------------------

服务器房间列表信息 
field_id  =  1  红包场
field_id  =  2  金币场
field_id  =  99 排位场

onRoomConfig中 可以收到 game_mode = data.game_mode
game_mode = 6 为排位场 可以为 KKVS.GAME_MODEL赋值

GamePlayer({

onEnterRoomResult: function (lobbyID, fieldID, roomID, bSuccess, erorStr) 
{
 	if (KKVS.GAME_MODEL == 6) 
 	{
        this.c_enter_game(lobbyID, fieldID, roomID);
    }
},




on_score_master_update:function(score_master) {
 cc.log("GamePlayer->>>>on_score_master_update 玩家排位积分发送改变 当前最新积分: " + score_master);
}


约战 房卡模式
game_mode = 2 可以为 KKVS.GAME_MODEL赋值
LOBBY_MSG_BASE_ACT_CREATE_ROOM                                      = 150     # 创建 房间（玩法）
LOBBY_MSG_BASE_ACT_JOIN_ROOM                                        = 151     # 加入 房间（玩法）
LOBBY_MSG_BASE_ACT_DESTORY_ROOM                                     = 152     # 销毁 房间（玩法）
LOBBY_MSG_BASE_ACT_LEAVE_ROOM                                       = 153     # 离开 房间（玩法）

创建 房间 --------普通
req_lobby_msg(LOBBY_MSG_BASE_ACT_CREATE_ROOM, json{"game_id": 1, "round": 4, "multiples": 5, "field_type": 0, "roles": 4, "room_type": 0})
返回 （ID  名称 描述 房卡数 活动房卡数 游戏中的房间数 是否允许会员创建房间）
on_lobby_msg(LOBBY_MSG_BASE_ACT_CREATE_ROOM, json.dump({'game_id': 1,'room_id': 1}))


加入 房间 --------普通
req_lobby_msg(LOBBY_MSG_BASE_ACT_JOIN_ROOM, json{"room_id": 1, "pwd": "xxxxxx"})
返回 
on_lobby_msg(LOBBY_MSG_BASE_ACT_JOIN_ROOM, json.dump({"src": {"room_id": 1, "pwd": "123456"}, "success": true}))

离开 房间 --------普通
req_lobby_msg(LOBBY_MSG_BASE_ACT_LEAVE_ROOM, json{"room_id": 1})
返回 
on_lobby_msg(LOBBY_MSG_BASE_ACT_LEAVE_ROOM, json.dump({"src": {"room_id": 1}, "success": true}))



---------------------兑换 
  cmd定义
  CMD_DIAMOND_EXCHANGE_GM                                        = 5  # 命令码 5:钻石 兑换 游戏币
 

req_exc(cmd, num)
//cmd 命令码 int
//要兑换的具体个数 int

//目前兑换比例
钻石    游戏币
[300] = 30000
[500] = 55000
[1000] = 110000
[5000] = 600000
如 请求
req_exc(CMD_DIAMOND_EXCHANGE_GM, 300)
即请求消耗300钻石来换游戏币

兑换结果通过
opt_ret返回 客户端自己更新当前钻石数量
<opt_ret>

	<!-- cmd -->
	<Arg>		UINT8	 </Arg>

	<!-- 对应cmd 成功或失败提示 长度>0失败 否则成功 -->
	<Arg>		UNICODE	 </Arg>

</opt_ret>


------------改名

req_rename("想要要修改成的昵称")

返回
<!-- 改名结果 -->
<on_rename>

    <!-- 改名结果 0失败 其他成功 -->
	<Arg>	UINT8		</Arg>

	 <!--  字符串 > 0为 错误码 -->
    <Arg>	UNICODE		</Arg>
    
</on_rename>


-----------------修改头像框



PLAYER_MSG_ID_CHANGE_HEAD_FRAME                                     = 30    # 玩家请求修改头像框
	
req_player_msg(PLAYER_MSG_ID_CHANGE_HEAD_FRAME, json{"id": PROP_ID_HEAD_FRAME_1})

返回 修改成功后的头像框ID  如果 ID =0 则是修改失败
on_player_msg(PLAYER_MSG_ID_CHANGE_HEAD_FRAME, {'id': PROP_ID_HEAD_FRAME_1})

----------------------排行榜
待更新


仅仅服务器用 与客户端无关
-----------------排位赛  赛季结束 自动更新机制赛季信息 待更新 
 赛季奖励发放 待更新 
 //客户端有一个固定遮挡全屏的提示框 不领取无法进行游戏 必须领取完上个赛季的奖励才可以进行游戏

 提前30分钟 或者1小时 关闭排位赛房间 


 具体流程 
 1.  23点30分 手动 前30分钟开始 创建新赛季 停止房间进入  //  存储过程 执行 创建新赛季

 2.  00点 == 30分钟后的整点 存储过程 执行 段位继承 玩家段位继承奖励、记录  发奖励到邮件

 3.  在线玩家 强制清理排位数据 打开房间 


login1 登陆+游戏
login2 登陆+游戏
game1 核心服务
game2 中心服务器
game3 游戏






